services:
  server-node:
    build: server/node/
    profiles:
      - node
    environment:
      - SERVER_PORT=4000
      - OPA_URL=http://localhost:8181
      - DATABASE_URL=postgresql://postgres:schmickethub@localhost:5432/postgres?schema=public
    depends_on:
      - database
      - opa
    network_mode: host
    expose:
      - 4000

  server-csharp:
    build: server/csharp/
    profiles:
      - csharp
    environment:
      OPA_URL: "http://localhost:8181"
      DATABASE_CONN_STR: "Host=localhost;Database=postgres;Username=postgres;Password=schmickethub"
    depends_on:
      - database
      - opa
    network_mode: host
    expose:
      - 4000

  server-aspnetcore:
    build: server/aspnetcore/
    profiles:
      - aspnetcore
    environment:
      OPA_URL: "http://localhost:8181"
      DATABASE_CONN_STR: "Host=localhost;Database=postgres;Username=postgres;Password=schmickethub"
    depends_on:
      - database
      - opa
    network_mode: host
    expose:
      - 4000

  database:
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    volumes:
      - "./server/node/database/init.sql:/docker-entrypoint-initdb.d/init.sql"
    environment:
      POSTGRES_PASSWORD: schmickethub
    network_mode: host
    expose:
      - 5432

  # For manual debugging of the Postgres DB.
  # adminer:
  #   image: adminer
  #   restart: always
  #   network_mode: host
  #   expose:
  #     - 8080

  server-java:
    build: server/java/
    init: true
    environment:
      - OPA_URL=http://opa:8181
    ports:
      - "4000:4000"
    profiles:
      - java
    depends_on:
      - opa

  server-springboot:
    build: server/springboot/
    init: true
    environment:
      # TODO: figure out how to get Spring to accept db URL from env
      #- OPA_URL=http://opa:8181
      - OPA_URL=http://localhost:8181
      - _JAVA_OPTIONS=-Djava.net.preferIPv4Stack=true
    network_mode: host
    #ports:
    #  - "4000:8080"
    expose:
      - 4000
    profiles:
      - springboot
    depends_on:
      - database
      - opa

  client-html:
    build: client/html/
    profiles:
      - html
    environment:
      SERVER_HOST: localhost
      SERVER_PORT: 4000
      CLIENT_HOST: 127.0.0.1
      CLIENT_SERVER: 3000
    network_mode: host
    expose:
      - 3000

  client-react:
    build: client/react/
    profiles:
      - react
    network_mode: host
    expose:
      - 3000
    depends_on:
      - proxy-react

  proxy-react:
    image: caddy:latest
    network_mode: host
    volumes:
      - ${PWD}/caddy/Caddyfile-local:/etc/caddy/Caddyfile
    expose:
      - 4001
    depends_on:
      - opa

  opa:
    image: ${EOPA_IMAGE:-ghcr.io/styrainc/enterprise-opa:latest}
    pull_policy: always
    ports:
      - "8181:8181"
    command:
      - run
      - --server
      - --addr=:8181
      - --log-level=debug
      - --no-license-fallback
      - --set=decision_logs.console=true
      - --bundle
      - /policies
    working_dir: /
    volumes:
      - ./policies:/policies
    environment:
      EOPA_LICENSE_KEY: ${EOPA_LICENSE_KEY}

  integration-tests:
    image: ghcr.io/orange-opensource/hurl:latest
    volumes:
      - ./tests:/tests
    command:
      - --test
      - --retry=10
      - --very-verbose
      - --report-junit=tests/api/report.xml
      - tests/api/
    environment:
      - HURL_host=localhost
      - HURL_skip_filters=${HURL_SKIP_FILTERING:-true}
      - HURL_skip_masking=${HURL_SKIP_MASKING:-true}
    profiles:
      - tools
    network_mode: host
